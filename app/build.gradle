/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/9.0.0/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
}

group = 'app'
version = '1.0.0'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    // JavaFX modules
    implementation 'org.openjfx:javafx-controls:23'
    implementation 'org.openjfx:javafx-fxml:23'

    // MySQL JDBC driver
    implementation 'mysql:mysql-connector-java:8.0.33'

    // SSH
    implementation 'com.jcraft:jsch:0.1.55'

    // Dotenv
    implementation 'io.github.cdimascio:dotenv-java:3.0.0'

    // Optional logging
    implementation 'org.slf4j:slf4j-simple:2.0.13'
}

javafx {
    version = "23"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'dbtools.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.withType(JavaExec) {
    jvmArgs = [
        '--add-opens', 'javafx.controls/javafx.scene.control=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/javafx.stage=ALL-UNNAMED'
    ]
}